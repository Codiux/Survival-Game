class Projectile : public sf::Drawable {
    public:
        Projectile() {
            
        }
        Projectile(int x, int y, sf::Vector2f collisionSize, sf::Vector2i mouse, float speed) {
            sf::Vector2f distance(mouse.x - pCollisionShape.getGlobalBounds().top, mouse.y - pCollisionShape.getGlobalBounds().left);
            pCollisionShape.setSize(collisionSize);
            slope = distance.y/distance.x;
        }
        void setSize(sf::Vector2f size) {
            pCollisionShape.setSize(size);
            pCollisionShape.setOrigin(pCollisionShape.getLocalBounds().width , pCollisionShape.getLocalBounds().height);
        }
        void setPosition(int x, int y) {
            pCollisionShape.setPosition(x, y);
        }
        void update(float deltaTime) {
            pCollisionShape.move(speed * deltaTime, (slope * speed) * deltaTime);
        }
    private:
        virtual void draw(sf::RenderTarget& target, sf::RenderStates states) const
        {
            target.draw(pCollisionShape, states);
        }
        sf::RectangleShape pCollisionShape;
        float slope;
        float speed;
};
